{"version":3,"sources":["components/Congratulation.jsx","components/Level1.jsx","components/Level2.jsx","components/Fly.jsx","App.js","index.js"],"names":["Congratulation","useState","buttonClass","setButtonClass","className","onInit","typewriter","typeString","callFunction","start","to","initialStae","class1","class2","class3","class4","Level","props","classButton","setClassButton","typeComplete","setTypeComplete","onClick","newClass","Level2","nextButtonClass","setNextButtonClass","inputValue","setInputValue","id","onChange","e","previousValue","target","value","type","placeholder","console","log","Fly","onclick","App","path","exact","component","Level1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84141ad5.chunk.js","sourcesContent":["import \"./Level1.css\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typewriter from \"typewriter-effect\";\nimport \"./congratulations.css\";\n\nfunction Congratulation() {\n  const [buttonClass, setButtonClass] = useState(\"hiddenClass\");\n  return (\n    <div className=\"congratulation\">\n      <section className=\"text\">\n        <Typewriter\n          onInit={(typewriter) => {\n            typewriter\n              .typeString(\n                \"<span className = 'congratsText'>CONGRATULATIONS!!!</span> Your spaceship is fixed, now you need to find the code to open the door.\"\n              )\n              .callFunction(() => {\n                setButtonClass(\"showButton\");\n              })\n              .start();\n          }}\n        />\n      </section>\n      <Link to=\"/level1\">\n        <button className={buttonClass}>TRY TO OPEN THE DOOR</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Congratulation;\n","import \"./Level1.css\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typewriter from \"typewriter-effect\";\n\nconst initialStae = {\n  class1: \"answer\",\n  class2: \"answer\",\n  class3: \"answer\",\n  class4: \"answer\",\n};\n\nconst Level = (props) => {\n  const [classButton, setClassButton] = useState(initialStae);\n  const [typeComplete, setTypeComplete] = useState(false);\n  return (\n    <div className=\"level1\">\n      <div className=\"display\">\n        <section className=\"question\">\n          <section className=\"Type-text\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .typeString(\n                    \"<h1>To unlock the door you must get code which is there in the sequence.</h1>\"\n                  )\n                  .callFunction(() => {\n                    setTypeComplete(true);\n                  })\n                  .start();\n              }}\n            />\n          </section>\n          {typeComplete ? (\n            <div>\n              <p>\n                \"Code is the next number in the sequence. Press the right number\n                and unlock the door\"\n              </p>\n              <h3>4, 9, 16, 25, ?</h3>\n            </div>\n          ) : null}\n        </section>\n        <div>\n          <button\n            className=\"buttons\"\n            onClick={() => {\n              let newClass = { ...initialStae };\n              if (classButton.class1 === \"answer\") {\n                newClass.class1 = \"right-answer\";\n              } else if (classButton.class1 === \"right-answer\") {\n                newClass.class1 = \"answer\";\n              }\n\n              setClassButton(newClass);\n            }}\n          >\n            36\n          </button>\n          <button\n            className=\"buttons\"\n            onClick={() => {\n              let newClass = { ...initialStae };\n              if (classButton.class2 === \"answer\") {\n                newClass.class2 = \"else\";\n              } else if (classButton.class2 === \"else\") {\n                newClass.class2 = \"answer\";\n              }\n\n              setClassButton(newClass);\n            }}\n          >\n            30\n          </button>\n          <button\n            className=\"buttons\"\n            onClick={() => {\n              let newClass = { ...initialStae };\n              if (classButton.class3 === \"answer\") {\n                newClass.class3 = \"else\";\n              } else if (classButton.class3 === \"else\") {\n                newClass.class3 = \"answer\";\n              }\n\n              setClassButton(newClass);\n            }}\n          >\n            18\n          </button>\n          <button\n            className=\"buttons\"\n            onClick={() => {\n              let newClass = { ...initialStae };\n              if (classButton.class4 === \"answer\") {\n                newClass.class4 = \"else\";\n              } else if (classButton.class4 === \"else\") {\n                newClass.class4 = \"answer\";\n              }\n\n              setClassButton(newClass);\n            }}\n          >\n            2\n          </button>\n        </div>\n\n        <div className={classButton.class1}>\n          <p className=\"jawab\">\n            Woww!! You have unlocked the door, but you are not fully done yet.\n            You need to find the Password to start the Engine.\n          </p>\n          <Link to=\"/level2\">\n            <button className=\"answer-button\">\n              TRY PASSWORD TO START THE ENGINE\n            </button>\n          </Link>\n        </div>\n        <div className={classButton.class2}>\n          <p className=\"jawab\">\n            You are thinking in the right direction but the answer is not right\n          </p>\n        </div>\n        <div className={classButton.class3}>\n          <p className=\"jawab\">\n            Think of a bigger number and remember you have limited number of\n            choices\n          </p>\n        </div>\n        <div className={classButton.class4}>\n          <p className=\"jawab\">\n            How can you even think that the answer can be 2. I am looking to\n            lock you on this plannet for next 2000 years. //Alien is Super Angry\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Level;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./level2.css\";\n\nconst Level2 = () => {\n  const [classButton, setClassButton] = useState(\"false\");\n  const [nextButtonClass, setNextButtonClass] = useState(\"false\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputValue((previousValue) => e.target.value);\n  };\n\n  function handleClick() {\n    if (inputValue === \"72779673\") {\n      setClassButton(\"true\");\n      setNextButtonClass(\"nextButton\");\n      console.log(classButton);\n    } else {\n      setClassButton(\"false\");\n      setNextButtonClass(\"false\");\n\n      console.log(classButton);\n    }\n  }\n\n  // function handleKeypress(e) {\n  //   console.log(\"keypress\");\n  //   if (e.keyCode === 13) {\n  //     console.log(\"enter pressed\");\n  //     handleClick();\n  //   }\n  // }\n  return (\n    <div className=\"level2\">\n      <section className=\"question\">\n        <h1>Now, to start the engine you have to enter the right password:</h1>\n        <h3>\n          If you have used the old phone with the numeric keyboard, you can find\n          the number which is hidden in the word \"PASSWORD\"\n        </h3>\n\n        <input\n          className=\"password\"\n          id=\"password\"\n          onChange={handleChange}\n          value={inputValue}\n          type=\"number\"\n          placeholder=\"Enter your password\"\n        ></input>\n      </section>\n\n      <button\n        className=\"password-button\"\n        type=\"submit\"\n        id=\"myBtn\"\n        onClick={handleClick}\n      >\n        Submit\n      </button>\n      <section>\n        <h3 className={classButton}>You have entered the right password</h3>\n        <Link to=\"/fly\">\n          <button className={nextButtonClass}>Fly Back Home</button>\n        </Link>\n      </section>\n    </div>\n  );\n};\n\nexport default Level2;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./fly.css\";\n\nfunction Fly() {\n  return (\n    <div className=\"fly\">\n      <section className=\"question\">\n        <h1>Goodbye to your planet!!</h1>\n      </section>\n\n      <button\n        className=\"finalButton\"\n        onclick=\"window.parent.postMessage('nextLevel')\"\n      >\n        Next Level\n      </button>\n    </div>\n  );\n}\n\nexport default Fly;\n","import Congratulation from \"./components/Congratulation\";\nimport Level1 from \"../src/components/Level1\";\nimport Level2 from \"./components/Level2\";\nimport Fly from \"./components/Fly\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Congratulation} />\n          <Route path=\"/Level1\" exact component={Level1} />\n          <Route path=\"/level2\" component={Level2} />\n          <Route path=\"/fly\" component={Fly} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}